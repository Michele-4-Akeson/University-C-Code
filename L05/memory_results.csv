Search Value    ,Linear Search , Binary Search,Fibonacci Search  ,Notes,,
,,,,,,
1,2344,2340,2284,"maximum resident set size is greatest for the linear search algorithem, and may vary due to number of requires checks made by each algorithem, where in this case, linear search requires the most check and thus the most memory (as it's accessing the array the most?) Varibility may also occur between cases due to current avaliable memory",,
4,2284,2280,2284,"maxmimum resident size is relativly equal, but lowest in binary search. This may be due to the fact that each algorithem performs a very low number of checks to find the elememy (each accesss the array a minimum number of times, hence why overall, they require less allocated memory than in search for a non exsitent element.",,
22,2344,2280,2340,"maximum resident set size is lowest in binary search - despite real time being equal for each algorithem, binary search requires less allocated memory. This may be due to binary search algorithem having a lower Big O operation - it consitently requires less checks the other algorithems, thus on average it is allocated less memory",,
37,2284,2332,2340,"desipite equal real times, linear search presents the maxmium resident set size",,
22906,2340,2340,2344,"Maxmimum resudent set size for each algorithem appears to remain relatively consistent with each other despite changes in case. This may be partially due to the stored array, and how it is instantiated regardless of which algorithem is executed. And the minimal difference in allocated memory is determined by instantiated varibles or number of each function, and the number of checks preformed",,
53757,2340,2280,2340,"desipite equal real times, linear and fibonacci search presents the greatest maxmium resident set size",,
112591,2340,2284,2280,"desipite equal real times, linear and binary search presents the greatest maxmium resident set size",,
361940,2280,2344,2340,"desipite equal real times, binary and fibonacci search presents the greatest maxmium resident set size",,
475713,2340,2280,2344,"desipite equal real times, linear and fibonacci search presents the greatest maxmium resident set size",,
893766,2340,2340,2280,"Fibonacci presents the lowest maximum resident set size. In this specific case, it also presented the slowest real time. This presents a situation in which as real time increases, memory requirements decrease",,
996637,2340,2280,2284,minor variability in Maxmium resident set size,,
996639,2340,2344,2344,minor variability in Maxmium resident set size,,
(negative)996652,2340,2280,2340,"linear search requires the greatest maxmimum resident set size in this case, where it also presents the slowest real time",,
,,,,,,General Notes
,,,,,,"Typically, as runtime decreases - gets quicker, memory useage increases - requires more (but I guess we should focus on how process intensive each algorithem is in each case"
